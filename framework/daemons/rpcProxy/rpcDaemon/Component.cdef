sources:
{
    le_rpcProxy.c
    le_rpcProxyNetwork.c
    le_rpcProxyEventHandler.c
#if ${LE_CONFIG_RTOS} = y
    le_rpcProxyConfigLocal.c
#elif ${LE_CONFIG_RPC_PROXY_LIBRARY} = y
    le_rpcProxyConfigLocal.c
#else
    le_rpcProxyConfig.c
#endif

#if ${LE_CONFIG_RPC_RUNTIME_CONFIG_TREE} = y
    le_rpcProxyRuntimeConfigTree.c
#else
    le_rpcProxyRuntimeStatic.c
#endif
}

requires:
{
#if ${LE_CONFIG_RPC_ENABLE_CONFIG_TREE} = y
    api:
    {
        le_cfg.api
    }
#else
    component:
    {
        rpcStaticConfig
    }
#endif
}

provides:
{
    api:
    {
#if ${LE_CONFIG_RPC_RUNTIME_CONFIG_TREE} = y
        le_rpc.api
#endif
    }
}

cflags:
{
    -I$LEGATO_ROOT/framework/daemons/rpcProxy
    -I$LEGATO_ROOT/framework/daemons/rpcProxy/rpcDaemon
    -I$LEGATO_ROOT/framework/liblegato
}
